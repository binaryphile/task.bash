#!/usr/bin/env bash

main() {
  section system
  task.apt_upgrade

  section credential
  task.install /mnt/chromeos/MyFiles/Downloads/crostini/id_ed25519 ~/.ssh/id_ed25519

  section dotfiles
  task.git_clone git@github.com:binaryphile/dotfiles ~/dotfiles
  task.ln contexts/crostini ~/dotfiles/context

  section ssh
  task.ln ~/dotfiles/ssh/config ~/.ssh/config

  section nix
  task.curlpipe_lix_installer
  strict off
  source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
  strict on
  task.ln ~/dotfiles/config.nix ~/.config/nixpkgs/config.nix

  section home manager
  task.nix-channel_add_home-manager
  task.nix-channel_update
  task.nix-shell_home-manager_install
  strict off
  source ~/.nix-profile/etc/profile.d/hm-session-vars.sh
  strict on
  task.ln ~/dotfiles/home.nix ~/.config/home-manager/home.nix
  task.home-manager_switch

  section projects
  task.mkdir  /mnt/chromeos/MyFiles/Downloads/crostini/projects
  task.ln     /mnt/chromeos/MyFiles/Downloads/crostini/projects ~/projects

  section go
  task.mkdir  /mnt/chromeos/MyFiles/Downloads/crostini/GolandProjects
  task.ln     /mnt/chromeos/MyFiles/Downloads/crostini/GolandProjects ~/GolandProjects

  section neovim
  task.git_clone git@github.com:binaryphile/dot_vim ~/.config/nvim
  task.curl https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim ~/.local/share/nvim/site/autoload/plug.vim
  task.nvim_headless_PlugInstall

  section obsidian
  task.mkdir  /mnt/chromeos/MyFiles/Downloads/crostini/obsidian
  task.ln     /mnt/chromeos/MyFiles/Downloads/crostini/obsidian ~/obsidian

  section tesht
  task.git_clone git@github.com:binaryphile/tesht ~/projects/tesht
  task.git_checkout develop ~/projects/tesht
  task.ln  /mnt/chromeos/MyFiles/Downloads/crostini/projects/tesht/tesht ~/.local/bin/tesht

  section task.bash
  task.git_clone git@github.com:binaryphile/task.bash ~/projects/task.bash
  task.git_checkout develop ~/projects/tesht

  section apps
  task.ln <<'  END'
    ~/dotfiles/bash/init.bash                 ~/.bash_profile
    ~/dotfiles/bash/init.bash                 ~/.bashrc
    ~/dotfiles/bash/init.bash                 ~/.profile
    ~/dotfiles/gitconfig                      ~/.gitconfig
    ~/dotfiles/liquidprompt/liquid.theme      ~/.config/liquidprompt/liquid.theme
    ~/dotfiles/liquidprompt/liquidpromptrc    ~/.config/liquidpromptrc
    ~/dotfiles/ranger/rc.conf                 ~/.config/ranger/rc.conf
    ~/dotfiles/ranger/rifle.conf              ~/.config/ranger/rifle.conf
    ~/dotfiles/tmux.conf                      ~/.tmux.conf
  END
}

### task definitions

## system

# task.apt_upgrade upgrades all apt packages to latest.
# It first does an apt update.
task.apt_upgrade() {
  task   'apt update'
  become root
  unchg  'All packages are up to date.'
  def    'apt update'

  task   'apt upgrade'
  prog   on
  become root
  unchg  '0 upgraded, 0 newly installed'
  def    'apt upgrade -y'
}

## credential
task.install() {
  task  "install -m 600 $1 $2"
  exist $2
  def   "mkdir -pm 700 $(dirname $2); install -m 600 $1 $2"
}

## nix
task.curlpipe_lix_installer() {
  task   'install single-user nix'
  prog   on
  exist  /nix/var/nix/profiles/default/bin/nix-env
  def    'curl -sSf -L https://install.lix.systems/lix | sh -s -- install linux --no-confirm --init none'

  task 'change store ownership for single user'
  ok   '[[ $(stat -c %U /nix):$(stat -c %G /nix) == ted:ted ]]'
  def  'sudo chown -R ted:ted /nix'
}

## home manager

task.nix-channel_add_home-manager() {
  task   'add home manager channel'
  exist  ~/.nix-channels
  def    'nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager'
}

task.nix-channel_update() {
  task   'update nix channels'
  prog   on
  exist  ~/.nix-defexpr/channels/home-manager
  def    'nix-channel --update'
}

task.nix-shell_home-manager_install() {
  task   'install home manager'
  prog   on
  exist  ~/.config/home-manager
  def    "nix-shell '<home-manager>' -A install"
}

task.home-manager_switch() {
  task  'apply home manager configuration'
  prog  on
  unchg 'No change so reusing latest profile generation'
  def   'home-manager switch'
}

## neovim
task.nvim_headless_PlugInstall() {
  task  'install neovim plugins'
  exist ~/.local/share/nvim/plugged
  def   'nvim --headless +PlugInstall +qall'
}

# boilerplate

if [[ -e task.bash ]]; then
  source ./task.bash
else
  lib=$(curl -fsSL https://raw.githubusercontent.com/binaryphile/task.bash/main/task.bash) || exit
  eval "$lib"
  unset -v lib
fi

return 2>/dev/null
set -e

[[ ${1:-} == -x ]] && { shift; set -x; }

main
summarize
