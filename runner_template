#!/usr/bin/env bash

# The flow of main is to delineate sections and call task functions.
# The idea with naming functions for tasks is
# to keep the name close to the primary command it calls or
# to the `task` description.
main() {
  # Section names help break sets of tasks into logical groups, but aren't required.
  # Usually you'll see more tasks than this under each.
  section system
  task.apt_upgrade

  section etc
  task.echo_Hello_World
}

task.apt_upgrade() {
  task   'apt update'
  become root
  unchg  'All packages are up to date.'
  def    'apt update'


  task   'apt upgrade'
  become root
  prog   on
  unchg  '0 upgraded, 0 newly installed'
  def    'apt upgrade -y'
}

task.echo_Hello_World() {
  task 'say hello'
  def 'echo "Hello, World!"'
}

# source task.bash, or download it
if [[ -e task.bash ]]; then
  source ./task.bash
else
#  lib=$(curl -fsSL https://raw.githubusercontent.com/username/reponame/branchname/task.bash) || exit
  eval "$lib"
  unset -v lib
fi

# stop here if sourcing for repl access
return 2>/dev/null
set -e # otherwise turn on exit on error

# enable tracing if given a -x argument
[[ ${1:-} == -x ]] && { shift; set -x; }

main
summarize
